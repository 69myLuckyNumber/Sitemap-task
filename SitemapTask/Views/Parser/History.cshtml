@model SitemapTask.Models.HistoryViewModel
@{
    double upperlimit = Math.Ceiling(Model.Data.First().Value.Average());
    ViewBag.Title = "History";
}

@Html.ActionLink("Home","Index", "Parser")
@if (Model != null)
{
    <h1 class="display-3"><a href="@Model.Hostname">@Model.Hostname</a></h1>
    <h3 class="display-3">@Model.Date.ToString("F")</h3>
    <hr>
    int i = 1;

    foreach (var item in Model.Data)
    {
        double percentage = Math.Round((item.Value.Average() / upperlimit) * 100, 2);
        <div class="progress progress-striped" style="margin-bottom: 3px">
            @if (percentage >= 75)
            {

                <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"
                     style="width: @percentage%">
                    <span>@item.Key (@percentage %)</span>
                </div>
}
            else if (percentage < 75 && percentage >= 50)
            {


                <div class="progress-bar progress-bar-success progress-bar-warning" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"
                     style="width: @percentage%">
                    <span>@item.Key (@percentage %)</span>   
                </div>
            }
            else if (percentage < 50 && percentage >= 25)
            {
                    <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"
                         style="width: @percentage%">
                        <span>@item.Key (@percentage %)</span>
                    </div>
            }
            else
            {
                <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"
                        style="width: @percentage%">
                    <span>@item.Key (@percentage %)</span>
                </div>
            }

        </div>


    }
    <hr>
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Url</th>
                <th scope="col">Min(sec.)</th>
                <th scope="col">Max(sec.)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <th scope="row">@i</th>
                    <td><a href="@item.Key">@item.Key</a></td>
                    <td>@Math.Round(item.Value.Min(), 3)</td>
                    <td>@Math.Round(item.Value.Max(), 3)</td>
                </tr>i++;
            }
        </tbody>
    </table>
    <hr>
}